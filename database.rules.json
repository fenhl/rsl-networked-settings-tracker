{
  "rules": {
    "games": {
      "$gameid": {
        ".write": "(!data.child('owner').exists() && newData.child('owner').val() === auth.uid) || (!newData.exists() && data.child('owner').val() === auth.uid)",
        ".validate": "!$gameid.contains('.') && !$gameid.contains('/') && !$gameid.contains('\\\\') && (!newData.exists() || data.child('owner').exists() || newData.child('owner').exists())",
        "owner": {
          ".read": "true",
          ".validate": "newData.parent().child('passcode').exists()"
        },
        "passcode": {
          ".read": "auth.uid === data.parent().child('owner').val()",
          ".write": "auth.uid == data.parent().child('owner').val()",
          ".validate": "newData.isString() && newData.val().length >= 1"
        },
        "editors": {
          ".read": "auth.uid === data.parent().child('owner').val()",
          ".write": "auth.uid === data.parent().child('owner').val()",
          "$editor_uid": {
            ".read": "auth.uid === $editor_uid",
            ".write": "auth.uid === $editor_uid && newData.val() === data.parent().parent().child('passcode').val()"
          }
        },
        "settings": {
          ".read": "true",
          ".write": "data.parent().child('editors').child(auth.uid).exists()"
        },
        "$other": {
          ".read": "false",
          ".write": "false"
        }
      }
    }
  }
}